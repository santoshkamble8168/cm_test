{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/components/additional-form/additional-form.component.ts","./src/app/components/additional-form/additional-form.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/person/person.component.ts","./src/app/components/person/person.component.html","./src/app/confirmation.guard.ts","./src/app/shared/auth.service.ts","./src/app/shared/person-details.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { PersonComponent } from './components/person/person.component';\nimport { AdditionalFormComponent } from './components/additional-form/additional-form.component';\n\n//Auth Guard\nimport {AuthGuard} from './auth.guard';\nimport { ConfirmationGuard } from './confirmation.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path:'', pathMatch:'full', redirectTo:'login'},\n  {path:'login', component:LoginComponent},\n  {path:'profile', component:PersonComponent, canActivate: [AuthGuard]},\n  {path:'additionalform', component:AdditionalFormComponent, canActivate: [AuthGuard], canDeactivate:[ConfirmationGuard]},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {AuthService} from './shared/auth.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PersonComponent } from './components/person/person.component';\nimport { AdditionalFormComponent } from './components/additional-form/additional-form.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ConfirmationGuard } from './confirmation.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PersonComponent,\n    AdditionalFormComponent,\n    NavbarComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [ConfirmationGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n//Auth Service\nimport {AuthService} from './shared/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.authService.isLoggedIn()) {\n        return true;\n      } else {\n        this.router.navigate(['/login'], {});\n        return false;\n      }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthService} from '../../shared/auth.service';\nimport {ConfirmationGuard, canComponenDeactive} from '../../confirmation.guard';\n\n@Component({\n  selector: 'app-additional-form',\n  templateUrl: './additional-form.component.html',\n  styleUrls: ['./additional-form.component.css']\n})\nexport class AdditionalFormComponent implements OnInit, canComponenDeactive {\n  userData : any;\n  model: any = {};\n  userName = '';\n  password = '';\n  submitted = false;\n\n  constructor(private authService:AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getUserData();\n  }\n\n  //Method to get user data from a local storage\n  //usually used a Service to get loggedin user data \n  getUserData(){\n    this.userData = JSON.parse(localStorage.getItem('userData'));\n    console.log(this.userData);\n    this.userName = this.userData.userName;\n    this.password = this.userData.password;\n  }\n\n  //Form on Submit - Template driven form\n  onSubmit() {\n    this.submitted = true;\n    this.router.navigate(['/profile']);\n  }\n\n  //this method is called when user want to leave AdditionalFormComponent without summiting the form\n  confirm(){\n    if(this.submitted){\n      return true;\n    }else{\n      return confirm('Are you sure want to Leave?');\n    }\n    \n  }\n\n}\n","<!-- main app container -->\n<app-navbar></app-navbar>\n<div class=\"jumbotron\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                <h3>Additional Information</h3>\n                <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n\n                    <div class=\"form-group\">\n                        <label for=\"userName\">User Name</label>\n                        <input type=\"text\" class=\"form-control\" name=\"userName\" [(ngModel)]=\"userName\" readonly/>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"password\" readonly/>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.email\" name=\"email\"\n                            #email=\"ngModel\" required email>\n                        <span class=\"text-danger\"\n                            *ngIf=\"(email.touched || f.submitted) && email.errors?.required\">\n                            Email is required\n                        </span>\n                        <span class=\"text-danger\" *ngIf=\"email.touched && email.errors?.email\">\n                            Enter a valid email address\n                        </span>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"pincode\">Pin code</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.pincode\" name=\"pincode\"\n                            #pincode=\"ngModel\" minlength=\"4\" maxlength=\"4\" pattern= \"[0-9]+\" required>\n                        <span class=\"text-danger\"\n                            *ngIf=\"(pincode.touched || f.submitted) && pincode.errors?.required\">\n                            Pin Code is required\n                        </span>\n                        <span class=\"text-danger\" *ngIf=\"pincode.touched && pincode.errors?.minlength\"> Pin Code must be at least 4 characters</span>\n                        <span class=\"text-danger\" *ngIf=\"pincode.touched && pincode.errors?.maxlength\"> Pin Code must be at least 4 characters</span>\n                        <span class=\"text-danger\" *ngIf=\"pincode.touched && pincode.errors?.pattern\"> Only number allowed</span>\n                    </div>\n                    \n                    \n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {Router} from '@angular/router';\n\n//Auth service\nimport {AuthService} from '../../shared/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  isLoggedIn = false;\n  showMsg = false;\n  \n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  //on init set a reactive form validation\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // A get method to access form fields\n  get f() { return this.loginForm.controls; }\n\n  //on form submit\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    //Check the login is success\n    this.isLoggedIn = this.authService.login(this.loginForm.value);\n    if(this.isLoggedIn){\n      this.router.navigate(['/additionalform']);\n    }else{\n      this.showMsg = true;\n    }\n}\n\n}\n","<!-- main app container -->\n<div class=\"jumbotron\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <h3>Cloudmoyo Login</h3>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label>User Name</label>\n                        <input type=\"text\" formControlName=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" />\n                        <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.userName.errors.required\">User Name is required</div>\n                            <div *ngIf=\"f.userName.errors.minlength\">User Name have at least 3 characters</div>\n                        </div>\n                    </div>\n                \n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <div *ngIf=\"showMsg\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">User name/ Password is incorrect!</div>\n                        <button class=\"btn btn-primary\">Login</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../shared/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  //If user logged in then show the Navbar\n  currentUser = true;\n  constructor(private authService: AuthService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  //Logout method to remove token from local storage and redirect to logoin component\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\"  routerLinkActive=\"active\" routerLink=\"/profile\">Profile</a>\n        <a class=\"nav-item nav-link\"  routerLinkActive=\"active\" routerLink=\"/additionalform\">Additional form</a>\n        <a class=\"nav-item nav-link app-logout\"  (click)=\"logout()\">Logout</a>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                <h3>404 Page Not Found</h3>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {PersonDetailsService} from '../../shared/person-details.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit, OnDestroy {\n\n  public userList: any;\n  public singleUser: any;\n  private subscription: Subscription;\n  isloading : boolean;\n\n  constructor(private person: PersonDetailsService) { }\n\n  ngOnInit(): void {\n    this.isloading = true;\n    this.getPersonData();\n  }\n\n  getPersonData(){\n    this.subscription = this.person.getUserData().subscribe( response => {\n      this.userList = response[0];\n      this.singleUser = response[1];\n      this.isloading = false;\n      console.log(this.singleUser);\n    })\n    \n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container mt-3 pt-3 profile-panel\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col col-lg-2 profile\">\n            <div class=\"text-center\">\n                <img src=\"../../../assets/img/profile.jpg\" class=\"rounded-circle\" alt=\"Cinque Terre\" width=\"150\" height=\"150\"> \n            </div>\n        </div>\n        <div class=\"col col-lg-8\">\n            <h5><strong>A Brief History of Seven Killings</strong></h5>\n            <p>By {{singleUser?.name}}</p>\n            <p class=\"last-mod\">Last Modified: {{singleUser?.username}}</p>\n            <p>Its 1976 Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n            <a class=\"stretched-link builds-link\">3 Builds</a>\n            <div class=\"container mt-3 p-3 profile-panel\" *ngIf=\"isloading\">\n                <div class=\"row justify-content-md-center\">\n                    <div class=\"col col-lg-2 profile\">\n                        <div class=\"text-center\">\n                            <img src=\"../../../assets/img/loader.gif\"> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"Profile-list\">\n                <div *ngFor=\"let person of userList | slice:1:5;\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div class=\"row justify-content-md-center\">\n                                <div class=\"col col-lg-2\">\n                                    <div class=\"text-center\">\n                                        <img src=\"../../../assets/img/profile.jpg\" class=\"rounded-circle\" alt=\"Cinque Terre\" width=\"100\" height=\"100\"> \n                                    </div>\n                                </div>\n                                <div class=\"col col-lg-10\">\n                                    <h6><strong>{{person?.name}}</strong> </h6>\n                                    <p>Created On: 2015-10-23 13:58:12.0</p>\n                                    <p>Last Modified: 2015-10-23 13:58:12.0</p>\n                                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries</p>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n    \n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { AdditionalFormComponent } from './components/additional-form/additional-form.component';\n\nexport interface canComponenDeactive{\n  confirm():boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmationGuard implements CanDeactivate<AdditionalFormComponent> {\n  canDeactivate(\n    component: AdditionalFormComponent,\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return component.confirm();\n    \n\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  private userData = {\n    user_name: '',\n    user_password: ''\n  }\n\n  userDetails: any;\n\n  private selectedItem = new BehaviorSubject(this.userData);\n  private selected = this.selectedItem.asObservable();\n\n  constructor() { }\n\n  public currentUser: any;\n\n  public login(userInfo){\n    if(userInfo.userName == 'santosh' && userInfo.password == 'santosh@123'){\n      localStorage.setItem('ACCESS_TOKEN', \"access_token\");\n      this.setUserData(userInfo);\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  public logout(){\n    localStorage.removeItem('ACCESS_TOKEN');\n  }\n  \n  public isLoggedIn(){\n    this.currentUser = !!localStorage.getItem('ACCESS_TOKEN');\n    return !!localStorage.getItem('ACCESS_TOKEN');\n  }\n\n  setUserData(userInfo:any){\n    this.userDetails = userInfo;\n    localStorage.setItem('userData', JSON.stringify(userInfo));\n  }\n\n  //public getUserData(): Observable<any[]>{\n  public getUserData(){\n    //return this.userDetails;\n    //return JSON.parse(localStorage.getItem('userData'));\n    let data = JSON.parse(localStorage.getItem('userData'))\n    return data;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment'\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonDetailsService {\n\n  constructor(private http: HttpClient) { }\n\n  apiUrl = environment.apiConfig.url;\n\n  public getUserData(): Observable<any[]> {\n    let userList = this.http.get(this.apiUrl+'users');\n    let singleUser = this.http.get(this.apiUrl+'users/1');\n    return forkJoin([userList, singleUser]);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiConfig:{\n    url: 'https://jsonplaceholder.typicode.com/'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}